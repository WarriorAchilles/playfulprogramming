/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Healthcheck */
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Successful response */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"text/plain": string;
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/tasks/url-metadata": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						/** Format: uri */
						url: string;
					};
				};
			};
			responses: {
				/** @description Task complete */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							title?: string;
							icon?: {
								src: string;
								width?: number;
								height?: number;
							};
							banner?: {
								src: string;
								width?: number;
								height?: number;
							};
						};
					};
				};
				/** @description Task created */
				202: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": Record<string, never>;
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: never;
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
