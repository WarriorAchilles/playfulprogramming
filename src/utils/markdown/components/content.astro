---
import {
	components,
	ComponentNode,
	isHtmlNode,
	isComponentNode,
} from "utils/markdown/components/components";
import { isRoot } from "../unist-is-element";

export interface Props {
	content: ComponentNode["children"];
}

const content = Astro.props.content;
---

{
	content?.map((node) => {
		if (isHtmlNode(node)) {
			return <Fragment set:html={node.innerHtml} />;
		} else if (isComponentNode(node)) {
			const Component = components[node.component];
			// eslint-disable-next-line @typescript-eslint/no-explicit-any
			return <Component children={node.children} {...(node.props as any)} />;
		} else if (isRoot(node)) {
			return <Astro.self content={node.children} />;
		}
	})
}
