---
import styles from "./series-toc.module.scss";
import { PostInfo } from "types/index";

import { Button } from "../../../components";
import { findActivePost } from "./base";
import { CollectionInfo } from "types/CollectionInfo";
import { translate } from "../../../utils";
import { getShortTitle } from "../../../utils/remove-article-collection-prefix";

interface SeriesTocProps {
	post: PostInfo;
	postSeries: PostInfo[];
	collection?: CollectionInfo;
}

const { post, postSeries, collection } = Astro.props as SeriesTocProps;

const activePostsMeta = findActivePost(post, postSeries);

const showMoreText = translate(
	Astro,
	"action.view_all_chapters",
	"" + activePostsMeta.length,
);
const showLessText = translate(Astro, "action.view_less_chapters");
---

<div class={styles.seriesTableOfContent}>
	<div class={styles.seriesHeader}>
		{
			(
				<h2
					class={styles.titleContainer}
					id="series-header"
					data-no-heading-link
				>
					<span class={`text-style-body-medium-bold ${styles.partOfSeries}`}>
						This article is part of a series:
					</span>
					{collection ? (
						<a
							class={`text-style-headline-4 ${styles.articleTitle}`}
							href={`/collections/${collection.upToDateSlug ?? collection.slug}`}
						>
							{collection.title}
						</a>
					) : (
						<span class={`text-style-headline-4 ${styles.articleTitle}`}>
							{post.collection}
						</span>
					)}
				</h2>
			)
		}
	</div>
	<div class={styles.contentsContainer}>
		<ol
			aria-labelledby="series-header"
			role="list"
			class={styles.listContainer}
		>
			{
				activePostsMeta.length !== 0 ? (
					<>
						{activePostsMeta.map((seriesPost) => (
							<li
								class={styles.navigationItemOuter}
								data-dont-show-initially={!seriesPost.shouldShowInitially}
							>
								<a
									href={`/posts/${seriesPost.slug}`}
									class={`text-style-body-large-bold ${styles.navigationItem}`}
									data-is-active={seriesPost.isActive}
								>
									Part {seriesPost.order}:{" "}
									{getShortTitle(seriesPost, collection)}
								</a>
							</li>
						))}
					</>
				) : null
			}
		</ol>
		{
			activePostsMeta.length >= 4 ? (
				<div class={styles.buttonContainer}>
					<Button
						id="toggleAllButton"
						tag="button"
						data-show-more-text={showMoreText}
						data-show-less-text={showLessText}
					>
						{showMoreText}
					</Button>
				</div>
			) : null
		}
	</div>
</div>

<script>
	const toggleButton =
		document.querySelector<HTMLButtonElement>("#toggleAllButton")!;
	const toggleButtonLabel = toggleButton.children[0] as HTMLElement;
	const showHideChapters = Array.from(
		document.querySelectorAll<HTMLElement>("[data-dont-show-initially='true']"),
	);

	let expanded = false;

	toggleButton.addEventListener("click", () => {
		if (!expanded) {
			showHideChapters.forEach((chapter) => {
				chapter.style.display = "block";
			});
			toggleButtonLabel.innerText = toggleButton.dataset.showLessText!;
		} else {
			showHideChapters.forEach((chapter) => {
				chapter.style.display = "none";
			});
			toggleButtonLabel.innerText = toggleButton.dataset.showMoreText!;
		}
		expanded = !expanded;
	});
</script>
